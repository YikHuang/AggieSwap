{"ast":null,"code":"var _jsxFileName = \"/Users/angelayoon/Downloads/ECS265/AggieSwap/frontend/src/swap/Swap.js\",\n  _s = $RefreshSig$();\nimport Currency from \"./Currency\";\nimport { useState, useRef } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Swap() {\n  _s();\n  const [payment, setPayment] = useState({\n    paidAmt: 0,\n    paidCurrency: \"\",\n    receivedAmt: \"\",\n    receivedCurrency: \"\",\n    rate: 0\n  });\n  const paymentRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"XRD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handlePaymentInput(e),\n          type: \"number\",\n          ref: paymentRef,\n          className: \"transactionTextbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"=>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transactionForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AggieSwap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"transactionTextbox\",\n          value: payment.receivedAmt,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Currency, {\n        payment: payment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/confirm?paidAmt=\" + payment.paidAmt + \"&paidCurrency=\" + payment.paidCurrency + \"&receivedAmt=\" + payment.receivedAmt + \"&receivedCurrency=\" + payment.receivedCurrency,\n          className: \"btn btn-primary btn-xl\",\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  function handlePaymentInput(e) {\n    var baseCur = \"XRD\";\n    var paidAmt = Number(paymentRef.current.value);\n    SendGetCurrencyRequest(paidAmt, baseCur);\n  }\n\n  // Function of sending \"get currency\" request\n  async function SendGetCurrencyRequest(paidAmt, baseCur) {\n    var response;\n    const url = \"http://localhost:3005/getCurrency\";\n    const apiName = \"getCurrency\";\n    const request = {\n      apiName: apiName,\n      baseCur: baseCur\n    };\n    console.log(request);\n    await Axios.post(url, request).then(res => {\n      response = res.data;\n      var receivedAmt = paidAmt * response.amt;\n      if (receivedAmt === 0) {\n        receivedAmt = \"\";\n      }\n      setPayment({\n        paidAmt: paidAmt,\n        paidCurrency: baseCur,\n        receivedAmt: receivedAmt,\n        receivedCurrency: response.currency,\n        rate: response.amt\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(response);\n  }\n}\n_s(Swap, \"GNyZ3jwOj12G5fJfSaQy/Q+uppo=\");\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["Currency","useState","useRef","Axios","Swap","payment","setPayment","paidAmt","paidCurrency","receivedAmt","receivedCurrency","rate","paymentRef","e","handlePaymentInput","baseCur","Number","current","value","SendGetCurrencyRequest","response","url","apiName","request","console","log","post","then","res","data","amt","currency","catch","error"],"sources":["/Users/angelayoon/Downloads/ECS265/AggieSwap/frontend/src/swap/Swap.js"],"sourcesContent":["import Currency from \"./Currency\"\nimport { useState, useRef } from \"react\";\nimport Axios from 'axios';\n\nfunction Swap() {\n  const [payment, setPayment] = useState({paidAmt: 0, paidCurrency: \"\", receivedAmt: \"\", receivedCurrency: \"\", rate: 0});\n  const paymentRef = useRef();\n\n  return (\n    <>\n      <div>\n        {/* <div>\n          <h3>XRD</h3>\n          <input onChange={(e) => handlePaymentInput(e)} type=\"number\" ref={paymentRef} className=\"transactionTextbox\" />\n        </div>\n        <div>\n          <h1>=&gt;</h1>\n        </div>\n        <div className=\"transactionForm\">\n          <h3>AggieSwap</h3>\n          <input type=\"number\" className=\"transactionTextbox\" value={payment.receivedAmt} readOnly></input>\n        </div>\n        <Currency payment={payment}/> */}\n\n        <div>\n          <h3>XRD</h3>\n          <input onChange={(e) => handlePaymentInput(e)} type=\"number\" ref={paymentRef} className=\"transactionTextbox\" />\n        </div>\n        <div>\n          <h1>=&gt;</h1>\n        </div>\n        <div className=\"transactionForm\">\n          <h3>AggieSwap</h3>\n          <input type=\"number\" className=\"transactionTextbox\" value={payment.receivedAmt} readOnly></input>\n        </div>\n        <Currency payment={payment}/>\n\n\n        <div>\n          <a href={\"/confirm?paidAmt=\" + payment.paidAmt + \"&paidCurrency=\" + payment.paidCurrency + \n                \"&receivedAmt=\" + payment.receivedAmt + \"&receivedCurrency=\" + payment.receivedCurrency} \n            className=\"btn btn-primary btn-xl\">Buy</a>\n        </div>\n      </div>\n    </>\n  )\n\n  function handlePaymentInput(e){\n    var baseCur = \"XRD\";\n    var paidAmt = Number(paymentRef.current.value);\n\n    SendGetCurrencyRequest(paidAmt, baseCur);\n  }\n\n  // Function of sending \"get currency\" request\n  async function SendGetCurrencyRequest(paidAmt, baseCur){\n\n    var response;\n    const url = \"http://localhost:3005/getCurrency\";\n    const apiName = \"getCurrency\";\n    const request = {apiName: apiName, baseCur: baseCur};\n    console.log(request);\n    \n    await Axios\n      .post(url, request)\n      .then(res => {\n        response = res.data;\n\n        var receivedAmt = paidAmt * response.amt;\n        if(receivedAmt === 0){\n          receivedAmt = \"\";\n        }\n\n        setPayment({paidAmt: paidAmt, paidCurrency: baseCur, receivedAmt: receivedAmt, \n          receivedCurrency: response.currency, rate: response.amt});\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    console.log(response);\n\n  }  \n\n}\n\nexport default Swap\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}